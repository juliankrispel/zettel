{"ast":null,"code":"\"use strict\";\n\nvar _slicedToArray = require(\"/Users/juliankrispel/projects/zettel-new/node_modules/@babel/runtime/helpers/slicedToArray\");\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\n\nfunction change(update) {\n  const currentValue = update.current.value;\n\n  const _sort = [update.change.start, update.change.end].sort((a, b) => a - b),\n        _sort2 = _slicedToArray(_sort, 2),\n        start = _sort2[0],\n        end = _sort2[1];\n\n  const selectedValue = update.current.value.slice(start, end);\n  const valueUpdate = update.change.value;\n  const newValue = currentValue.slice(0, start).concat(valueUpdate).concat(currentValue.slice(end));\n\n  if (newValue[0].type !== 'block-start') {\n    throw new Error('First character always needs to be block-start');\n  } else if (newValue[newValue.length - 1].type !== 'block-end') {\n    throw new Error('Last character always needs to be block-end');\n  }\n\n  const newChange = {\n    start: start - 1,\n    end: end - selectedValue.length + valueUpdate.length - 1,\n    value: selectedValue\n  };\n  return {\n    current: {\n      value: newValue,\n      entityMap: {}\n    },\n    change: newChange\n  };\n}\n\nexports.default = change;","map":null,"metadata":{},"sourceType":"script"}