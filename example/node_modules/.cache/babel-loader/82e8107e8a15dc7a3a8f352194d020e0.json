{"ast":null,"code":"\"use strict\";\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\n\nconst getBlockOffset_1 = require(\"../getBlockOffset\");\n\nconst getFragmentNode = el => {\n  if (el == null) {\n    return null;\n  }\n\n  if (el.dataset && el.dataset.blockKey != null && el.dataset.fragmentStart != null) {\n    const _el = el;\n    return _el;\n  } else if (el.parentElement) {\n    return getFragmentNode(el.parentElement);\n  }\n\n  return null;\n};\n\nexports.default = listState => {\n  const domSelection = window.getSelection();\n  console.log('dom selection', domSelection);\n\n  if (domSelection == null || domSelection.anchorNode == null) {\n    return null;\n  }\n\n  let anchorOffset = domSelection.anchorOffset,\n      focusOffset = domSelection.focusOffset;\n  const _anchorNode = domSelection.anchorNode;\n  const _focusNode = domSelection.focusNode;\n  const anchorNode = getFragmentNode(_anchorNode);\n  const focusNode = getFragmentNode(_focusNode);\n  console.log({\n    anchorNode,\n    focusNode\n  });\n\n  if (anchorNode == null || focusNode == null) {\n    return null;\n  }\n\n  const anchorKey = anchorNode.dataset.blockKey;\n  const focusKey = focusNode.dataset.blockKey;\n  const anchorFragmentOffset = parseInt(anchorNode.dataset.fragmentStart);\n  const focusFragmentOffset = parseInt(focusNode.dataset.fragmentStart);\n  anchorOffset += (getBlockOffset_1.default(listState, anchorKey) || 0) + anchorFragmentOffset + 1;\n  focusOffset += (getBlockOffset_1.default(listState, focusKey) || 0) + focusFragmentOffset + 1;\n  return [anchorOffset, focusOffset].sort((a, b) => a - b);\n};","map":null,"metadata":{},"sourceType":"script"}