{"version":3,"sources":["examples/KittenAndLink.tsx","examples/ItalicAndBold.tsx","components/Button/index.tsx","examples/BlockStyling.tsx","examples/PlainText.tsx","examples/Rtl.tsx","examples/Tree/index.tsx","examples/Table/index.tsx","examples/InputTester/index.tsx","examples/MarkdownTest/index.tsx","examples/Draggable/index.tsx","examples/TimeTravel/Timeline.tsx","examples/TimeTravel/index.tsx","index.tsx","components/Button/index.module.css"],"names":["Block","React","memo","props","entity","block","type","src","react_default","a","createElement","key","blockKey","contentEditable","children","App","_useState","useState","EditorState","fromJSON","text","ranges","offset","length","styles","entityMap","1","isAtomic","2","htmlAttributes","target","href","_useState2","Object","slicedToArray","editorState","setEditorState","console","log","react_dist_default","renderTextFragment","htmlAttrs","className","renderBlock","onChange","renderStyle","style","Fragment","onKeyDown","event","metaKey","toggleStyle","Button","_ref","objectWithoutProperties","assign","button","onClick","blocks","getBlocksForRange","list","value","start","end","_editorState","reduce","newEditorState","blockOffset","change","objectSpread","includes","isBoundary","spellCheck","autoFocus","dir","CellBlock","RowBlock","react_dist","TableBlock","events","state","setState","ref","useRef","data","recordEvent","name","current","addEventListener","_state","getTargetRanges","map","range","startOffset","endOffset","_window$getSelection$","window","getSelection","getRangeAt","push","inputType","domRange","char","selection","cb","useEffect","forEach","suppressContentEditableWarning","JSON","stringify","fragments","frag","join","startsWith","emptyPositions","_useState3","_useState4","positions","setPosition","react_draggable_min_default","handle","position","onStop","x","y","defineProperty","scale","recurse","num","method","Timeline","undoStack","redoStack","color","_","index","undo","item","redo","Readme","lazy","__webpack_require__","e","then","bind","Content","react","fallback","exampleModules","Examples","_routeComps","keys","path","concat","component","history","createBrowserHistory","Layout","routeComps","flag","setFlag","toggleFlag","route","onMouseUp","react_router_dom","to","substr","id","Root","react_router","src_Layout","render","src_Content","rootElement","document","getElementById","hasChildNodes","hydrate","src_Root","module","exports"],"mappings":"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","file":"static/js/main.f68d09f1.chunk.js","sourcesContent":["import React, { useState } from 'react'\nimport { EditorState } from '@zettel/core'\nimport Editor, { RenderBlock } from '@zettel/react'\n\nconst text = `[One][][Two]`\n\nconst Block: RenderBlock = React.memo((props) => {\n  const { block } = props\n  const entity = block.entity\n  if (entity != null && entity.type === 'image' && entity.src != null) {\n    return <div key={props.block.blockKey} contentEditable={false}><img src={entity.src} /></div>\n  }\n  return <p key={props.block.blockKey}>{props.children}</p>\n})\n\nconst App = () => {\n  const [editorState, setEditorState] = useState(() => EditorState.fromJSON({\n    text,\n    ranges: [{\n      offset: 5,\n      length: 1,\n      styles: [],\n      entity: '1'\n    }, {\n      offset: 8,\n      length: 3,\n      styles: [],\n      entity: '2'\n    }],\n    entityMap: {\n      '1': {\n        isAtomic: true,\n        type: 'image',\n        src: 'http://placekitten.com/100/100'\n      },\n      '2': {\n        isAtomic: false,\n        type: 'link',\n        htmlAttributes: {\n          target: '_blank',\n          href: 'http://www.google.com'\n        }\n      }\n    }\n  }))\n\n  console.log(editorState)\n  return (\n    <Editor\n      renderTextFragment={(props) => {\n        console.log(props.entity)\n        if (props.entity != null && props.entity.type === 'link') {\n          return <a\n            {...props.entity.htmlAttributes}\n          >{props.children}</a>\n        }\n\n        return props.children\n      }}\n      htmlAttrs={{ className: 'editor'}}\n      renderBlock={Block}\n      onChange={setEditorState}\n      editorState={editorState}\n    />\n  );\n}\n\nexport default App;\n","import React, { useState } from 'react'\nimport { EditorState } from '@zettel/core'\nimport Editor from '@zettel/react'\n\nconst text = `[Italic][And Bold]`\n\nconst App = () => {\n  const [editorState, setEditorState] = useState(() => EditorState.fromJSON({\n    text,\n    ranges: [{\n      offset: 0,\n      length: 5,\n      styles: ['bold'],\n    }, {\n      offset: 3,\n      length: 10,\n      styles: ['italic'],\n    }],\n    entityMap: {}\n  }))\n\n  return (\n    <Editor\n      renderStyle={(props) => {\n        if (props.style === 'bold') {\n          return <strong>{props.children}</strong>\n        } else if (props.style === 'italic') {\n          return <i>{props.children}</i>\n        } else if (props.style === 'underline') {\n          return <u>{props.children}</u>\n        }\n\n        return <>{props.children}</>\n      }}\n\n      htmlAttrs={{ className: 'editor'}}\n      onKeyDown={(event) => {\n        if (event.key === 'b' && event.metaKey) {\n          return editorState.toggleStyle('bold')\n        } else if (event.key === 'i' && event.metaKey) {\n          return editorState.toggleStyle('italic')\n        } else if (event.key === 'u' && event.metaKey) {\n          return editorState.toggleStyle('underline')\n        }\n      }}\n      onChange={setEditorState}\n      editorState={editorState}\n    />\n  );\n}\n\nexport default App;\n","import React from 'react'\nimport styles from './index.module.css'\n\ntype Props = {\n  children: any,\n  onClick?: React.MouseEventHandler\n}\n\nexport default function ({ children, ...props }: Props) {\n  return <button className={styles.button} {...props}>\n    {children}\n  </button>\n}","import React, { useState } from 'react'\nimport { EditorState, getBlocksForRange } from '@zettel/core'\nimport Editor from '@zettel/react'\nimport { Button } from '../components'\n\nconst text = `[Headline 1][Headline 2][A paragraph]`\n\nconst App = () => {\n  const [editorState, setEditorState] = useState(() => EditorState.fromJSON({\n    text,\n    ranges: [{\n      offset: 0,\n      length: 1,\n      styles: ['H1']\n    }, {\n      offset: 12,\n      length: 1,\n      styles: ['H2']\n    }],\n    entityMap: {}\n  }))\n\n  return (\n    <>\n      <div>\n        <Button onClick={() => {\n          const blocks = getBlocksForRange(editorState.list.value, editorState.start, editorState.end)\n          const { start, end } = editorState\n\n          const _editorState = blocks.reduce((newEditorState, block) => {\n            // @ts-ignore\n            const value: BlockStart = newEditorState.list.value[block.blockOffset]\n            return newEditorState.change({\n              start: block.blockOffset - 1,\n              end: block.blockOffset,\n              value: [{\n                ...value,\n                styles: (value.styles || []).includes('H1') ? [] : ['H1'],\n              }]\n            })\n          }, editorState)\n          .change({ start, end, isBoundary: true })\n          setEditorState(_editorState)\n        }}>\n          H1\n        </Button>\n      </div>\n      <Editor\n        renderBlock={(props) => {\n          const { htmlAttrs, children, block } = props\n          if (block.styles != null) {\n            if (block.styles.includes('H1')) {\n              return <h1 {...htmlAttrs}>{children}</h1>\n            } else if (block.styles.includes('H2')) {\n              return <h2 {...htmlAttrs}>{children}</h2>\n            }\n          }\n          return <div {...htmlAttrs}>{children}</div>\n        }}\n        htmlAttrs={{ className: 'editor'}}\n        onChange={setEditorState}\n        editorState={editorState}\n      />\n    </>\n  );\n}\n\nexport default App;\n","import React, { useState } from 'react'\nimport { EditorState } from '@zettel/core'\nimport Editor from '@zettel/react'\n\nconst text = `[One 😅Line][And another line of text][And another line]`\n\nconst App = () => {\n  const [editorState, setEditorState] = useState(() => EditorState.fromJSON({\n    text,\n    ranges: [],\n    entityMap: {}\n  }))\n\n  return (\n    <Editor\n      htmlAttrs={{ spellCheck: false, autoFocus: true, className: 'editor'}}\n      onChange={setEditorState}\n      editorState={editorState}\n    />\n  );\n}\n\nexport default App;\n","import React, { useState } from 'react'\nimport { EditorState } from '@zettel/core'\nimport Editor from '@zettel/react'\n\nconst text = `[One 😅Line][يثصضنيهتثتتادويزرعقتبت][And another line]`\n\nconst App = () => {\n  const [editorState, setEditorState] = useState(() => EditorState.fromJSON({\n    text,\n    ranges: [],\n    entityMap: {}\n  }))\n\n  return (\n    <Editor\n      htmlAttrs={{ spellCheck: false, autoFocus: true, className: 'editor'}}\n      onChange={setEditorState}\n      renderBlock={(props) => {\n        const { htmlAttrs, children } = props\n        return <p dir=\"auto\" {...htmlAttrs}>{children}</p>\n      }}\n      editorState={editorState}\n    />\n  );\n}\n\nexport default App;\n","import React, { useState } from 'react'\nimport { EditorState } from '@zettel/core'\nimport Editor from '@zettel/react'\nimport './index.css'\n\nconst text = `[One Line[Another line[And another line]]][And another line of text][And another line]`\n\nconst App = () => {\n  const [editorState, setEditorState] = useState(() => EditorState.fromJSON({\n    text,\n    ranges: [],\n    entityMap: {}\n  }))\n\n  return (\n    <Editor\n      htmlAttrs={{ spellCheck: false, autoFocus: true, className: 'editor'}}\n      onChange={setEditorState}\n      renderBlock={(props) => {\n        const { htmlAttrs, children } = props\n        return <div {...htmlAttrs} className=\"tree-node\">{children}</div>\n      }}\n      editorState={editorState}\n    />\n  );\n}\n\nexport default App;\n","import React, { useState } from 'react'\nimport { EditorState } from '@zettel/core'\nimport Editor, { RenderBlock, EditorChildren, DefaultRenderBlock } from '@zettel/react'\nimport './index.css'\n\nconst text = `[[[One][Two]][[Three][Four]]][And a paragraph]`\n\nconst ranges = [{\n  offset: 0,\n  length: 1,\n  styles: [],\n  entity: '1'\n}]\n\nconst entityMap = {\n  '1': {\n    type: 'table'\n  }\n}\n\nconst CellBlock: RenderBlock = (props) => {\n  const { htmlAttrs, children } = props\n\n  return <td {...htmlAttrs}>\n    {children}\n  </td>\n}\n\nconst RowBlock: RenderBlock = (props) => {\n  const { htmlAttrs, block } = props\n\n  return <tr {...htmlAttrs}>\n    <EditorChildren\n      {...props}\n      renderBlock={CellBlock}\n      blocks={block.blocks}\n    />\n  </tr>\n\n}\n\n// @ts-ignore\nconst TableBlock: RenderBlock = (props) => {\n  const { htmlAttrs, block } = props\n  const { entity } = block\n\n  if (entity != null && entity.type === 'table') {\n    return <table {...htmlAttrs}>\n      <EditorChildren\n        {...props}\n        renderBlock={RowBlock}\n        blocks={block.blocks}\n      />\n    </table>\n  }\n\n  return <DefaultRenderBlock {...props}/>\n}\n\nconst App = () => {\n  const [editorState, setEditorState] = useState(() => EditorState.fromJSON({\n    text,\n    ranges,\n    entityMap\n  }))\n\n\n  return (\n    <Editor\n      htmlAttrs={{ spellCheck: false, autoFocus: true, className: 'editor'}}\n      renderBlock={TableBlock}\n      onChange={setEditorState}\n      editorState={editorState}\n    />\n  );\n}\n\nexport default App;\n","import React, { useRef, useState, useEffect } from 'react'\n\nconst events = ['compositionstart', 'compositionupdate', 'input', 'beforeinput']\n\nconst App = () => {\n  const [state, setState] = useState({})\n  const ref = useRef(null)\n  let data: {[key: string]: any} = { ...state }\n\n  const cb = (event: any, _state: any) => {\n    if (data[event.type] == null) {\n      data[event.type] = []\n    }\n    if (event.getTargetRanges != null) {\n      const ranges = event.getTargetRanges().map((range: any) => ({\n        startOffset: range.startOffset,\n        endOffset: range.endOffset,\n      }));\n\n      // @ts-ignore\n      const { startOffset, endOffset } = window.getSelection().getRangeAt(0)\n      data[event.type].push({\n        data: event.data,\n        inputType: event.inputType,\n        type: event.type,\n        ranges,\n        domRange: { startOffset, endOffset }\n      });\n    } else if (event.data != null) {\n      data[event.type].push({\n        inputType: event.inputType,\n        data: event.data\n      });\n    } else if (event.char != null) {\n      data[event.type].push({\n        key: event.key,\n        inputType: event.inputType,\n        char: event.char\n      });\n    } else {\n      console.log(event)\n      data[event.type].push({\n        key: event.key,\n        char: event.char,\n        type: event.type\n      });\n    }\n\n    setState({\n      ..._state,\n      ...data,\n      selection: {...getSelection()}\n    })\n  }\n\n  const recordEvent = (name: string) => {\n    // @ts-ignore\n    ref.current.addEventListener(name, (event) => cb(event, state))\n  }\n\n  useEffect(() => {\n    events.forEach(recordEvent)\n  }, [ref.current])\n\n  return <React.Fragment>\n    <div contentEditable suppressContentEditableWarning\n    ref={ref}\n  >\n    <h1>Try me</h1>\n  </div>\n  <pre>{JSON.stringify(state, null, 2)}</pre>\n  </React.Fragment>\n}\n\nexport default App;\n","import React, { useState } from 'react'\nimport { EditorState } from '@zettel/core'\nimport Editor from '@zettel/react'\n\nconst text = `[Try adding one or more # at the beginning of this line and a space]`\n\nconst App = () => {\n  const [editorState, setEditorState] = useState(() => EditorState.fromJSON({\n    text,\n    ranges: [],\n    entityMap: {}\n  }))\n\n  return (\n    <Editor\n      htmlAttrs={{ spellCheck: false, autoFocus: true, className: 'editor'}}\n      onChange={setEditorState}\n      renderBlock={(props) => {\n        const { htmlAttrs, children, block } = props\n        const text = block.fragments.map(frag => frag.text).join('')\n\n        if (text.startsWith('# ')) {\n          return <h1 {...htmlAttrs}>{children}</h1>\n        }\n\n        if (text.startsWith('## ')) {\n          return <h2 {...htmlAttrs}>{children}</h2>\n        }\n\n        if (text.startsWith('### ')) {\n          return <h3 {...htmlAttrs}>{children}</h3>\n        }\n\n        if (text === '---') {\n          return <hr />\n        }\n\n        return <div {...htmlAttrs}>{children}</div>\n      }}\n      editorState={editorState}\n    />\n  );\n}\n\nexport default App;\n","import React, { useState } from 'react'\nimport Draggable from 'react-draggable';\nimport { EditorState } from '@zettel/core'\nimport Editor from '@zettel/react'\nimport './index.css'\n\nconst text = `[One Line][Another line][And another line]`\n\nconst emptyPositions: { [key: string]: {x: number, y: number} } = {}\n\nconst App = () => {\n  const [editorState, setEditorState] = useState(() => EditorState.fromJSON({\n    text,\n    ranges: [],\n    entityMap: {}\n  }))\n\n  const [positions, setPosition] = useState(emptyPositions);\n\n  return (\n    <Editor\n      htmlAttrs={{ spellCheck: false, autoFocus: true, className: 'editor'}}\n      onChange={setEditorState}\n      renderBlock={(props) => {\n        const { htmlAttrs, children, block } = props\n\n        return <Draggable\n          handle=\".handle\"\n          position={positions[block.blockKey]}\n          onStop={(event, { x, y }) => {\n            setPosition({\n              ...positions,\n              [block.blockKey]: { x, y }\n            })\n          }}\n          scale={1}\n        >\n          <div>\n            <div contentEditable={false} className=\"handle\"></div>\n            <div {...htmlAttrs}>{children}</div>\n          </div>\n        </Draggable>\n      }}\n      editorState={editorState}\n    />\n  );\n}\n\nexport default App;\n","import React from 'react'\nimport { EditorState, undo, redo } from '@zettel/core'\nimport './index.css'\n\ntype Props = {\n  editorState: EditorState,\n  onChange: (editorState: EditorState) => void\n}\n\ntype Method = (editorState: EditorState) => EditorState\n\nconst recurse = (num: number, editorState: EditorState, method: Method): EditorState => {\n  if (num === 0) {\n    return editorState\n  }\n  return recurse(num - 1, method(editorState), method)\n}\n\nexport default function Timeline({ editorState, onChange }: Props) {\n  const { undoStack, redoStack } = editorState\n  return <div className=\"timeline\">\n    {(undoStack.length + redoStack.length) === 0 && <span style={{color: '#fff'}}>Start typing something and you'll see your undo states appear here</span>}\n    {undoStack.map((_, index) => (\n      <button\n        onClick={() => onChange(recurse(undoStack.length - index, editorState, undo))}\n        className=\"undo-step\"\n      ></button>\n    ))}\n    {redoStack.map((item, index) => (\n      <button\n        onClick={() => onChange(recurse(index + 1, editorState, redo))}\n        className=\"redo-step\"\n      ></button>\n    ))}\n  </div>\n}\n\n","import React, { useState } from 'react'\nimport { EditorState } from '@zettel/core'\nimport Editor from '@zettel/react'\nimport Timeline from './Timeline'\n\nconst text = `[One][Two][Three]`\n\nconst App = () => {\n  const [editorState, setEditorState] = useState(() => EditorState.fromJSON({\n    text,\n    ranges: [],\n    entityMap: {}\n  }))\n\n  return (\n    <>\n      <Editor\n        htmlAttrs={{ spellCheck: false, autoFocus: true, className: 'editor'}}\n        onChange={setEditorState}\n        editorState={editorState}\n      />\n      <Timeline editorState={editorState} onChange={setEditorState} />\n    </>\n  );\n}\n\nexport default App;\n","// @ts-ignore\nimport {importMDX} from 'mdx.macro'\nimport React, { useState, lazy, Suspense } from 'react';\nimport { render, hydrate} from 'react-dom';\nimport './index.css';\nimport './App.css';\nimport { createBrowserHistory } from 'history'\nimport * as Examples from './examples'\nimport { Router, Route, Link, Switch } from 'react-router-dom'\n\n\nconst Readme = lazy(() => importMDX('../../changelog.md'))\n\nconst Content = () =>\n  <Suspense fallback={<div>Loading...</div>}>\n    <Readme />\n  </Suspense>\n\nconst exampleModules: { [key: string]: any } = {...Examples}\n\ntype RouteComps = {\n  path: string,\n  component: any\n}[]\n\nconst _routeComps: RouteComps = Object.keys(Examples).map((key: string) => ({\n  path: `/${key}`,\n  component: exampleModules[key]\n}))\n\nconst history = createBrowserHistory()\n\ntype LayoutProps = {\n  children: React.ReactElement,\n  routeComps: RouteComps\n}\n\nconst Layout = ({ children, routeComps }: LayoutProps) => {\n  const [flag, setFlag] = useState(false)\n  const toggleFlag = () => setFlag(!flag)\n\n  return <main className={`app ${flag ? 'menu-toggled': ''}`}>\n    <nav>\n      <ul>\n        {routeComps.map((route: any) => (\n          <li onMouseUp={toggleFlag} key={route.path}><Link to={route.path}>{route.path.substr(1)}</Link></li>\n        ))}\n      </ul>\n    </nav>\n    <button onClick={toggleFlag} id=\"menu-button\">{flag ? '>' : '<'}</button>\n    {children}\n  </main>\n}\n\nconst Root = () => <Router history={history}>\n  <Layout routeComps={_routeComps}>\n    <Switch>\n      {_routeComps.map(props => <Route {...props} />)}\n      <Route render={() => <Content />} />\n    </Switch>\n  </Layout>\n</Router>\n\n\nconst rootElement = document.getElementById(\"root\");\n\nif (rootElement != null && rootElement.hasChildNodes()) {\n  hydrate(<Root />, rootElement);\n} else {\n  render(<Root />, rootElement);\n}","// extracted by mini-css-extract-plugin\nmodule.exports = {\"button\":\"Button_button__1yaWD\"};"],"sourceRoot":""}