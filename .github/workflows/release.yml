on:
  push:
    # Sequence of patterns matched against refs/tags
    branches:
      - master

name: Create Release

jobs:
  release:
    name: Create Release
    runs-on: ubuntu-latest
    steps:
      - name: Checkout code
        uses: actions/checkout@v2
        with:
          persist-credentials: false

      - name: Get yarn cache directory path
        id: yarn-cache-dir-path
        run: echo "::set-output name=dir::$(yarn cache dir)"

      - uses: actions/cache@v1
        with:
          path: ${{ steps.yarn-cache-dir-path.outputs.dir }}
          key: ${{ runner.os }}-yarn-${{ hashFiles('**/yarn.lock') }}
          restore-keys: |
            ${{ runner.os }}-yarn-

      - name: Install Dependencies
        run: yarn
      - name: Get Changelog Entry
        id: changelog_entry
        run: node scripts/release.js
        env:
          PACKAGES: core, react
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}

      - name: publish core package
#        if: ${{ steps.changelog_entry.outputs.unreleased == 'true' }} 
        continue-on-error: true
        run: |
          npm config set //registry.npmjs.org/:_authToken=$NPM_TOKEN
          cd core
          yarn
          npm publish
        env:
          NPM_TOKEN: ${{ secrets.NPM_TOKEN }}

      - name: check core package is published
        run: node scripts/check-npm-release.js
        env:
          PACKAGE_VERSION: ${{ steps.changelog_entry.outputs.version }}
          PACKAGE_NAME: core

      - name: publish react package
#        if: ${{ steps.changelog_entry.outputs.unreleased == 'true' }} 
        continue-on-error: true
        run: |
          npm config set //registry.npmjs.org/:_authToken=$NPM_TOKEN
          cd react
          yarn
          npm publish
        env:
          NPM_TOKEN: ${{ secrets.NPM_TOKEN }}

      - name: check react package is published
        run: node scripts/check-npm-release.js
        env:
          PACKAGE_VERSION: ${{ steps.changelog_entry.outputs.version }}
          PACKAGE_NAME: react

      - name: Create Github Release
        id: create_release
        if: ${{ steps.changelog_entry.outputs.unreleased == 'true' }} 
        uses: actions/create-release@v1
        continue-on-error: true
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        with:
          tag_name: "v${{ steps.changelog_entry.outputs.version }}"
          release_name: Release v${{ steps.changelog_entry.outputs.version }}
          body: |
            ${{ steps.changelog_entry.outputs.description }}

            ### Artifacts
            - [@zettel/core](https://www.npmjs.com/package/@zettel/core/v/${{ steps.changelog_entry.outputs.version }})
            - [@zettel/react](https://www.npmjs.com/package/@zettel/react/v/${{ steps.changelog_entry.outputs.version }})
          draft: false
          prerelease: false
      - name: Install site dependencies
        run: |
          cd site
          yarn
          yarn build
      - name: Deploy to Github Pages
        uses: peaceiris/actions-gh-pages@v3
        with:
          publish_dir: site/build
          github_token: ${{ secrets.GITHUB_TOKEN }}

